[1/6] Building CXX object CMakeFiles/verifiquese.dir/home/leonardo/CodeProjects/app/vfq_interprete/ios/Classes/verifiquese.cpp.o
[2/6] Building CXX object CMakeFiles/verifiquese.dir/home/leonardo/CodeProjects/app/vfq_interprete/ios/Classes/convert.cpp.o
[3/6] Building CXX object CMakeFiles/verifiquese.dir/home/leonardo/CodeProjects/app/vfq_interprete/ios/Classes/document.cpp.o
[4/6] Building CXX object CMakeFiles/verifiquese.dir/home/leonardo/CodeProjects/app/vfq_interprete/ios/Classes/persona.cpp.o
[5/6] Building CXX object CMakeFiles/verifiquese.dir/home/leonardo/CodeProjects/app/vfq_interprete/ios/Classes/utilities.cpp.o
In file included from /home/leonardo/CodeProjects/app/vfq_interprete/ios/Classes/persona.cpp:14:
/home/leonardo/CodeProjects/app/vfq_interprete/ios/Classes/persona.h:44:65: warning: '&&' within '||' [-Wlogical-op-parentheses]
            if ((nombres[i] & 0x0ff) != 42 && nombres[i] > 0x40 && nombres[i] <= 0x5A || nombres[i] == 0x20 || nombres[i] == 0x2B || nombres[i] == 0x2D) {
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~ ~~
/home/leonardo/CodeProjects/app/vfq_interprete/ios/Classes/persona.h:44:65: note: place parentheses around the '&&' expression to silence this warning
            if ((nombres[i] & 0x0ff) != 42 && nombres[i] > 0x40 && nombres[i] <= 0x5A || nombres[i] == 0x20 || nombres[i] == 0x2B || nombres[i] == 0x2D) {
                                                                ^
                (                                                                    )
1 warning generated.
In file included from /home/leonardo/CodeProjects/app/vfq_interprete/ios/Classes/document.cpp:7:
/home/leonardo/CodeProjects/app/vfq_interprete/ios/Classes/persona.h:44:65: warning: '&&' within '||' [-Wlogical-op-parentheses]
            if ((nombres[i] & 0x0ff) != 42 && nombres[i] > 0x40 && nombres[i] <= 0x5A || nombres[i] == 0x20 || nombres[i] == 0x2B || nombres[i] == 0x2D) {
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~ ~~
/home/leonardo/CodeProjects/app/vfq_interprete/ios/Classes/persona.h:44:65: note: place parentheses around the '&&' expression to silence this warning
            if ((nombres[i] & 0x0ff) != 42 && nombres[i] > 0x40 && nombres[i] <= 0x5A || nombres[i] == 0x20 || nombres[i] == 0x2B || nombres[i] == 0x2D) {
                                                                ^
                (                                                                    )
1 warning generated.
/home/leonardo/CodeProjects/app/vfq_interprete/ios/Classes/utilities.cpp:25:24: warning: use of logical '&&' with constant operand [-Wconstant-logical-operand]
        } else if ((ch && 0x0ff) == 32 || ch == 0x20) {
                       ^  ~~~~~
/home/leonardo/CodeProjects/app/vfq_interprete/ios/Classes/utilities.cpp:25:24: note: use '&' for a bitwise operation
        } else if ((ch && 0x0ff) == 32 || ch == 0x20) {
                       ^~
                       &
/home/leonardo/CodeProjects/app/vfq_interprete/ios/Classes/utilities.cpp:25:24: note: remove constant to silence this warning
        } else if ((ch && 0x0ff) == 32 || ch == 0x20) {
                      ~^~~~~~~~
/home/leonardo/CodeProjects/app/vfq_interprete/ios/Classes/utilities.cpp:25:34: warning: result of comparison of constant 32 with expression of type 'bool' is always false [-Wtautological-constant-out-of-range-compare]
        } else if ((ch && 0x0ff) == 32 || ch == 0x20) {
                   ~~~~~~~~~~~~~ ^  ~~
2 warnings generated.
In file included from /home/leonardo/CodeProjects/app/vfq_interprete/ios/Classes/convert.cpp:6:
/home/leonardo/CodeProjects/app/vfq_interprete/ios/Classes/persona.h:44:65: warning: '&&' within '||' [-Wlogical-op-parentheses]
            if ((nombres[i] & 0x0ff) != 42 && nombres[i] > 0x40 && nombres[i] <= 0x5A || nombres[i] == 0x20 || nombres[i] == 0x2B || nombres[i] == 0x2D) {
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~ ~~
/home/leonardo/CodeProjects/app/vfq_interprete/ios/Classes/persona.h:44:65: note: place parentheses around the '&&' expression to silence this warning
            if ((nombres[i] & 0x0ff) != 42 && nombres[i] > 0x40 && nombres[i] <= 0x5A || nombres[i] == 0x20 || nombres[i] == 0x2B || nombres[i] == 0x2D) {
                                                                ^
                (                                                                    )
/home/leonardo/CodeProjects/app/vfq_interprete/ios/Classes/convert.cpp:24:36: warning: result of comparison of constant -64 with expression of type 'char' is always false [-Wtautological-constant-out-of-range-compare]
            if (rawDataOriginal[j] == -64 || rawDataOriginal[j] == -81 || rawDataOriginal[j] == -62) {
                ~~~~~~~~~~~~~~~~~~ ^  ~~~
/home/leonardo/CodeProjects/app/vfq_interprete/ios/Classes/convert.cpp:24:65: warning: result of comparison of constant -81 with expression of type 'char' is always false [-Wtautological-constant-out-of-range-compare]
            if (rawDataOriginal[j] == -64 || rawDataOriginal[j] == -81 || rawDataOriginal[j] == -62) {
                                             ~~~~~~~~~~~~~~~~~~ ^  ~~~
/home/leonardo/CodeProjects/app/vfq_interprete/ios/Classes/convert.cpp:24:94: warning: result of comparison of constant -62 with expression of type 'char' is always false [-Wtautological-constant-out-of-range-compare]
            if (rawDataOriginal[j] == -64 || rawDataOriginal[j] == -81 || rawDataOriginal[j] == -62) {
                                                                          ~~~~~~~~~~~~~~~~~~ ^  ~~~
4 warnings generated.
[6/6] Linking CXX shared library /home/leonardo/CodeProjects/firmese/democpp/demo01/build/vfq_interprete/intermediates/cmake/release/obj/armeabi-v7a/libverifiquese.so
